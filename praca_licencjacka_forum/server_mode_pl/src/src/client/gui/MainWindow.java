/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package client.gui;

import common.api.Service;
import common.domain.Post;
import common.domain.Topic;
import common.domain.User;
import client.facade.FacadesEnum;
import client.facade.Facade;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author Aleksander Wojcik
 */
public class MainWindow extends javax.swing.JFrame {

    private static final Logger logger = Logger.getLogger(MainWindow.class.getName());
    private User user;
    private java.util.ResourceBundle bundle=java.util.ResourceBundle.getBundle("Bundle");;


    ;

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }
    private List<Topic> loadedTopics;
    private Facade fasada;

    public MainWindow(FacadesEnum facade) {
        
        FacadesEnum availableFacades;
        this.fasada = new Facade();
        this.fasada.setFacade(facade);
        initComponents();
        logoutGUI();
        this.setTitle(bundle.getString("myApplication"));
        topicListModel = new DefaultListModel();
        topicListModel.addElement(bundle.getString("defaultTopic"));
        topicListModel.addElement(bundle.getString("defaultSecondTopic"));
        jTopicList.setModel(topicListModel);
        jTopicList.addMouseListener(new OpenTopicFormMouseListerner(this));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTopicList = new javax.swing.JList();
        jLoginButton = new javax.swing.JButton();
        jLogoutButton = new javax.swing.JButton();
        jRegisterButton = new javax.swing.JButton();
        jAddTopicButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTopicList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jTopicList);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Bundle"); // NOI18N
        jLoginButton.setText(bundle.getString("logIn")); // NOI18N
        jLoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLoginButtonActionPerformed(evt);
            }
        });

        jLogoutButton.setText(bundle.getString("logOut")); // NOI18N
        jLogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLogoutButtonActionPerformed(evt);
            }
        });

        jRegisterButton.setText(bundle.getString("register")); // NOI18N
        jRegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRegisterButtonActionPerformed(evt);
            }
        });

        jAddTopicButton.setText(bundle.getString("addTopic")); // NOI18N
        jAddTopicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddTopicButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLoginButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLogoutButton)
                .addGap(26, 26, 26)
                .addComponent(jRegisterButton)
                .addGap(49, 49, 49))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jAddTopicButton)))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLoginButton)
                    .addComponent(jLogoutButton)
                    .addComponent(jRegisterButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jAddTopicButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLogoutButtonActionPerformed
        // TODO add your handling code here:
        onLogout();
    }//GEN-LAST:event_jLogoutButtonActionPerformed

    private void jLoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLoginButtonActionPerformed

        LogInWindow logInWindow = new LogInWindow(this, this, true);
        logInWindow.setVisible(true);
    }//GEN-LAST:event_jLoginButtonActionPerformed

    private void jRegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRegisterButtonActionPerformed
        // TODO add your handling code here:
        RegisterWindow register = new RegisterWindow(this, true);
        register.setVisible(true);
    }//GEN-LAST:event_jRegisterButtonActionPerformed

    private void jAddTopicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddTopicButtonActionPerformed
        // TODO add your handling code here:
        AddNewTopicWindow tw = new AddNewTopicWindow(this, true, user);
        tw.setVisible(true);
    }//GEN-LAST:event_jAddTopicButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    private void loginGUI() {
        jLogoutButton.setEnabled(true);
        jAddTopicButton.setEnabled(true);
        jTopicList.setEnabled(true);
        jRegisterButton.setEnabled(false);
        jLoginButton.setEnabled(false);
    }

    private void logoutGUI() {
        jLogoutButton.setEnabled(false);
        jAddTopicButton.setEnabled(false);
        jTopicList.setEnabled(false);
        jRegisterButton.setEnabled(true);
        jLoginButton.setEnabled(true);
    }

    public void addTopicToList(String s) {
        topicListModel.add(topicListModel.size(), s);
    }

    public void onLogin(int id) {
        try {
            user = this.getService().getUser(id);
            this.setTitle(java.text.MessageFormat.format(bundle.getString("welcome_user") + " {0}", new Object[]{user.getLogin()}));
            loginGUI();
            loadTopics();
        } catch (Exception ex) {
            logger.log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, bundle.getString("serversErroc"));

        }
    }

    public void onLogout() {
        logoutGUI();
        this.setTitle(bundle.getString("myApplication"));
        topicListModel.clear();
        topicListModel.addElement(bundle.getString("defaultTopic"));
        topicListModel.addElement(bundle.getString("defaultSecondTopic"));
    }

    public void loadTopics() {
        try {
            Topic[] loadedTopics = this.getService().loadTopics();
            logger.info(Arrays.toString(loadedTopics));
            topicListModel.clear();
            for (int i = 0; i < loadedTopics.length; i++) {
                Topic topic = loadedTopics[i];
                topicListModel.add(i, topic.getTitle());
            }
            this.loadedTopics = Arrays.asList(loadedTopics);
        } catch (Exception ex) {
            logger.log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, bundle.getString("serversError"));

        }
    }

    public void loadPosts(int topicId) {
        try {
            Post[] posts = this.getService().loadPosts(topicId);
        } catch (Exception ex) {
            logger.log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, bundle.getString("serversError"));

        }
    }

    void addTopic(String titile, String content) {
        try {
            this.getService().addTopic(user.getUser_id(), titile, content);
//            modelListaTematow.add(modelListaTematow.size(), tytul);
            this.loadTopics();

        } catch (Exception ex) {
            logger.log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, bundle.getString("serversError"));

        }
    }

    class OpenTopicFormMouseListerner extends MouseAdapter {

        private MainWindow mw;

        public OpenTopicFormMouseListerner(MainWindow mw) {
            this.mw = mw;
        }

        public void mouseClicked(MouseEvent evt) {
            JList list = (JList) evt.getSource();
//                this.mw=mw;
            if (evt.getClickCount() == 2 && mw.jTopicList.isEnabled()) {
                int ind = list.getSelectedIndex();
                logger.info(java.text.MessageFormat.format(bundle.getString("youClicked") + "{0}", new Object[]{ind}));
                TopicForm tf = new TopicForm(loadedTopics.get(ind), mw, mw.user.getUser_id());
                tf.setVisible(true);
            }
        }
    }

    public Service getService() {
        return this.fasada.getService();
    }
    private DefaultListModel topicListModel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAddTopicButton;
    private javax.swing.JButton jLoginButton;
    private javax.swing.JButton jLogoutButton;
    private javax.swing.JButton jRegisterButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList jTopicList;
    // End of variables declaration//GEN-END:variables
}
